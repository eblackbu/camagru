-- MySQL Script generated by MySQL Workbench
-- Сб 02 янв 2021 15:06:05
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering


-- SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
-- SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
-- SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema camagru
-- -----------------------------------------------------

PRAGMA foreign_keys = ON ;

-- -----------------------------------------------------
-- Table `User`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `User` ;

CREATE TABLE IF NOT EXISTS `User` (
  `id` INTEGER PRIMARY KEY AUTOINCREMENT,
  `login` TEXT NOT NULL,
  `password` BLOB NOT NULL,
  `email` TEXT NOT NULL,
  `avatar` TEXT,
  `is_sending_mail` INTEGER NOT NULL DEFAULT 1,
  `is_admin` INTEGER NOT NULL DEFAULT 0) ;

CREATE UNIQUE INDEX `login_UNIQUE` ON `User` (`login`);

-- -----------------------------------------------------
-- Table `Subscription`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Subscription` ;

CREATE TABLE IF NOT EXISTS `Subscription` (
  `id` INTEGER PRIMARY KEY AUTOINCREMENT,
  `user_from` INTEGER NOT NULL,
  `user_where` INTEGER NOT NULL,
  CONSTRAINT `fk_user_from`
    FOREIGN KEY (`user_from`)
    REFERENCES `User` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_user_where`
    FOREIGN KEY (`user_where`)
    REFERENCES `User` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE) ;

CREATE INDEX `fk_user_where_idx` ON `Subscription` (`user_where`);
CREATE INDEX `fk_user_from_idx` ON `Subscription` (`user_from`);


-- -----------------------------------------------------
-- Table `Image`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Image` ;

CREATE TABLE IF NOT EXISTS `Image` (
  `id` INTEGER PRIMARY KEY AUTOINCREMENT,
  `label` TEXT,
  `filename` TEXT NOT NULL,
  `extension` TEXT NOT NULL,
  `created_by` INTEGER NOT NULL,
  `created_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT `fk_created_by`
    FOREIGN KEY (`created_by`)
    REFERENCES `User` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION) ;

CREATE INDEX `fk_image_created_by_idx` ON `Image` (`created_by`);


-- -----------------------------------------------------
-- Table `Like`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Like` ;

CREATE TABLE IF NOT EXISTS `Like` (
  `id` INTEGER PRIMARY KEY AUTOINCREMENT,
  `image` INTEGER NOT NULL,
  `created_by` INTEGER NOT NULL,
  `created_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT `fk_created_by`
    FOREIGN KEY (`created_by`)
    REFERENCES `User` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_image`
    FOREIGN KEY (`image`)
    REFERENCES `Image` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION) ;

CREATE INDEX `fk_like_created_by_idx` ON `Like` (`created_by`);
CREATE INDEX `fk_like_image_idx` ON `Like` (`image`);


-- -----------------------------------------------------
-- Table `Confirmation`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Confirmation` ;

CREATE TABLE IF NOT EXISTS `Confirmation` (
  `id` INTEGER PRIMARY KEY AUTOINCREMENT,
  `login` TEXT NOT NULL,
  `password` TEXT NOT NULL,
  `email` TEXT NOT NULL) ;

CREATE UNIQUE INDEX `confirmation_login_UNIQUE` ON `Confirmation` (`login`);


-- -----------------------------------------------------
-- Table `Comment`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Comment` ;

CREATE TABLE IF NOT EXISTS `Comment` (
  `id` INTEGER PRIMARY KEY AUTOINCREMENT,
  `text` TEXT NULL,
  `created_by` INTEGER NOT NULL,
  `image` INTEGER NOT NULL,
  `created_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT `fk_created_by`
    FOREIGN KEY (`created_by`)
    REFERENCES `User` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_image`
    FOREIGN KEY (`image`)
    REFERENCES `Image` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION) ;

CREATE INDEX `fk_comment_created_by_idx` ON `Comment` (`created_by`);
CREATE INDEX `fk_comment_image_idx` ON `Comment` (`image`);
